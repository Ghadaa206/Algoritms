#include<iostream>
#include<fstream>
#include <algorithm>
using namespace std;
void show(int a[], int arraysize)
{
	for (int i = 0; i < arraysize; ++i)
		cout << a[i] << " " ;
}
int main()
{


	ofstream MyFile("filename.txt");

	// Write to the file
	MyFile << "1 2 3 4 5 6 7 8 9 10";

	// Close the file
	MyFile.close();

	int myArray[10];

	//Opening the file
	ifstream inputfile("filename.txt");

	if (!inputfile.is_open())
		cout << "Error opening file";

	//Defining the loop for getting input from the file

	for (int r = 0; r < 10; r++) //Outer loop for rows
	{

		inputfile >> myArray[r];  //Take input from file and put into myArray

	}


	for (int r = 0; r < 10; r++)
	{

		cout << myArray[r] << "\t";

		cout << endl;
	}
	int asize = sizeof(myArray) / sizeof(myArray[0]);
	cout << "\nThe array is : \n";
	show(myArray, asize);

	cout << "\n\nLet's say we want to search for ";
	cout << "\n2 in the array So, we first sort the array";
	sort(myArray, myArray + asize);
	cout << "\n\nThe array after sorting is : \n";
	show(myArray, asize);
	cout << "\n\nNow, we do the binary search";
	if (binary_search(myArray, myArray + 10, 2))
		cout << "\nElement found in the array";
	else
		cout << "\nElement not found in the array";

	cout << "\n\nNow, say we want to search for 11";
	if (binary_search(myArray, myArray + 10, 11))
		cout << "\nElement found in the array in index ";
	else
		cout << "\nElement not found in the array"<<endl;

	system("pause");
}

##############################################################################
Another solution:

#include<iostream>
#include<fstream>

using namespace std;

int binarySearch(int arr[], int low, int high, int x)
{
	while (low <= high) {
		int mid = low + (high - low) / 2;

		if (arr[mid] == x)
			return mid;

		if (arr[mid] < x)
			low = mid + 1;

		else
			high = mid - 1;
	}

	return -1;
}

int main()
{


	ofstream MyFile("filename.txt");

	// Write to the file
	MyFile << "1 2 3 4 5 6 7 8 9 10";

	// Close the file
	MyFile.close();

	int myArray[10];

	//Opening the file
	ifstream inputfile("filename.txt");

	if (!inputfile.is_open())
		cout << "Error opening file";

	//Defining the loop for getting input from the file

	for (int r = 0; r < 10; r++) //Outer loop for rows
	{
		
			inputfile >> myArray[r];  //Take input from file and put into myArray
		
	}


	for (int r = 0; r < 10; r++)
	{
		
			cout << myArray[r] << "\t";
		
		cout << endl;
	}
	int x = 8;
    int n = sizeof(myArray) / sizeof(myArray[0]);
	int result = binarySearch(myArray, 0, n - 1, x);
	(result == -1)
		? cout << "Element is not present in array"
		: cout << "Element is present at index " << result << endl;


	system("pause");
}
################################################################################